{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","useState","items","setItems","useEffect","type","onChange","e","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","data3","bufferArray","target","result","wb","XLSX","wsname1","SheetNames","ws1","Sheets","data1","sheet_to_json","wsname2","ws2","data2","r1","find","r2","客戶料號","品名","數量","零件位置","push","delete","add","name","amount","locaton","data","onerror","error","then","d","readExcel","files","class","scope","map","i","key","style","backgroundColor","項次","備註","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.785e46bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as XLSX from \"xlsx\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  const readExcel = (file) => {\n\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (e) => {\n        var data3 = []\n        const bufferArray = e.target.result;\n\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n        const wsname1 = wb.SheetNames[0];\n        const ws1 = wb.Sheets[wsname1];\n        const data1 = XLSX.utils.sheet_to_json(ws1);\n        // resolve(data1);\n        const wsname2 = wb.SheetNames[1];\n        const ws2 = wb.Sheets[wsname2];\n        const data2 = XLSX.utils.sheet_to_json(ws2);\n        // resolve(data2);\n\n        for (var r1 of data1) {\n          let find = 0;\n          for (let r2 of data2) {\n            if (r1.客戶料號 === r2.客戶料號) {\n              find++;\n              if (r1.品名 === r2.品名) {\n                if (r1.數量 === r2.數量) {\n                  if (r1.零件位置 === r2.零件位置) {\n                    // data3.push({\n                    //   type: {\n                    //     delete: false,\n                    //     add: false,\n                    //     name: false,\n                    //     amount: false,\n                    //     locaton: false\n                    //   },\n                    //   data: r2\n                    // });\n                  } else {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: false,\n                        amount: false,\n                        locaton: true\n                      },\n                      data: r2\n                    });\n                  }\n                } else {\n                  if (r1.零件位置 === r2.零件位置) {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: false,\n                        amount: true,\n                        locaton: false\n                      },\n                      data: r2\n                    });\n                  } else {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: false,\n                        amount: true,\n                        locaton: true\n                      },\n                      data: r2\n                    });\n                  }\n                }\n              } else {\n                if (r1.數量 === r2.數量) {\n                  if (r1.零件位置 === r2.零件位置) {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: true,\n                        amount: false,\n                        locaton: false\n                      },\n                      data: r2\n                    });\n                  } else {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: true,\n                        amount: false,\n                        locaton: true\n                      },\n                      data: r2\n                    });\n                  }\n                } else {\n                  if (r1.零件位置 === r2.零件位置) {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: true,\n                        amount: true,\n                        locaton: false\n                      },\n                      data: r2\n                    });\n                  } else {\n                    data3.push({\n                      type: {\n                        delete: false,\n                        add: false,\n                        name: true,\n                        amount: true,\n                        locaton: true\n                      },\n                      data: r2\n                    });\n                  }\n                }\n              }\n            }\n          }\n          if (find === 0) {\n            data3.push({\n              type: {\n                delete: true,\n                add: false,\n                name: false,\n                amount: false,\n                locaton: false\n              },\n              data: r1\n            });\n          }\n        }\n        for (var r2 of data2) {\n          let find = 0;\n          for (let r1 of data1) {\n            if (r1.客戶料號 === r2.客戶料號) {\n              find++;\n            }\n          }\n          if (find === 0) {\n            data3.push({\n              type: {\n                delete: false,\n                add: true,\n                name: false,\n                amount: false,\n                locaton: false\n              },\n              data: r2\n            });\n            break;\n          }\n        }\n        resolve(data3);\n\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n\n    promise.then((d) => {\n      setItems(d);\n    });\n  };\n\n  useEffect(() => {\n    // console.log(items);\n  }, [items])\n  return (\n    <div>\n      <input\n        type=\"file\"\n        onChange={(e) => {\n          const file = e.target.files[0];\n          readExcel(file);\n        }}\n      />\n\n      <table class=\"table container\">\n        <thead>\n          <tr>\n            <th scope=\"col\">項次</th>\n            <th scope=\"col\">客戶料號</th>\n            <th scope=\"col\">品名</th>\n            <th scope=\"col\">數量</th>\n            <th scope=\"col\">零件位置</th>\n            <th scope=\"col\">備註</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((d, i) => (\n            <tr key={d.data.客戶料號 + (i++)} style={{ backgroundColor: d.type.delete ? \"#FF2400\" : d.type.add ? \"#FFFF00\" : \"#ffffff\" }}>\n              <th>{d.data.項次}</th>\n              <td>{d.data.客戶料號}</td>\n              <td style={{ backgroundColor: d.type.delete ? \"#FF2400\" : d.type.add ? \"#FFFF00\" : d.type.name ? \"#F87217\" : \"#ffffff\" }} >{d.data.品名}</td>\n              <td style={{ backgroundColor: d.type.delete ? \"#FF2400\" : d.type.add ? \"#FFFF00\" : d.type.amount ? \"#728FCE\" : \"#ffffff\" }}>{d.data.數量}</td>\n              <td style={{ backgroundColor: d.type.delete ? \"#FF2400\" : d.type.add ? \"#FFFF00\" : d.type.locaton ? \"#AB784E\" : \"#ffffff\" }}>{d.data.零件位置}</td>\n              {/* <td style={{backgroundColor:d.type.name?\"F87217\":\"#ffffff\"}}>{d.data.品名}</td>\n              <td style={{backgroundColor:d.type.amount?\"BCB88A\":\"#ffffff\"}}>{d.data.數量}</td>\n              <td style={{backgroundColor:d.type.locaton?\"AB784E\":\"#ffffff\"}}>{d.data.零件位置}</td> */}\n              <td>{d.data.備註}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}